%% Each new term in the Fibonacci sequence is generated by adding the previous two terms.
%% By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
%% By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

-module(problem_002).
-export([get_check_data/0, prepare_data/2, solve/1]).

-behaviour(numerical_task_behaviour).

get_check_data() ->
    [{4000000-1, 4613732}].

prepare_data(_ModuleSourceDir, Input) -> Input.

solve(MaxTerm) -> solve_impl({1, 1}, 0, MaxTerm).

solve_impl({_, Current}, Sum, MaxTerm) when Current >= MaxTerm -> Sum;
solve_impl({Previous, Current}, Sum, MaxTerm) ->
    FibonacciPair = fibonacci_seq({Previous, Current}),
    solve_impl(FibonacciPair, even_sum(FibonacciPair, Sum), MaxTerm).

even_sum({_, Current}, Sum) when Current rem 2 == 0 -> Sum + Current;
even_sum({_, Current}, Sum) when Current rem 2 /= 0 -> Sum.

fibonacci_seq({Previous, Current}) -> {Current, Current+Previous}.